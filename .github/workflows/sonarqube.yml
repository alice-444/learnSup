name: Coverage & Quality Report ✅

on:
  push:
    branches:
      - main
      - feat/*
  pull_request:
    branches:
      - main
      - feat/*

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint:
    name: ✏️ ESLint & Prettier
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Check Prettier formatting
        run: npm run format:check

  code_quality:
    name: 🚥 Code Climate
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
      - name: Create directory for code quality results
        run: mkdir codequality-results
      - name: Run Code Climate analysis
        run: |
          docker run \
            --env CODECLIMATE_CODE="$PWD" \
            --volume "$PWD":/code \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume /tmp/cc:/tmp/cc \
            codeclimate/codeclimate analyze -f html > ./codequality-results/index.html
      - name: Upload Code Quality Report
        uses: actions/upload-artifact@v4
        with:
          name: codequality-results
          path: codequality-results/

  codeql:
    name: 🔒 CodeQL Scan
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript
      - uses: github/codeql-action/autobuild@v2
      - uses: github/codeql-action/analyze@v2

  typecheck:
    name: 🔍 TypeScript Type-Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run tsc --noEmit
        run: npm run typecheck

  test:
    name: 🔬 Tests & Coverage
    needs: typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build TS
        run: npm run build
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: Check coverage threshold
        run: npx coverage-check --threshold 80
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/lcov.info
